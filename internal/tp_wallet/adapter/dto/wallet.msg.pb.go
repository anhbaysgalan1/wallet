// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: wallet.msg.proto

package dto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TransferType int32

const (
	TransferType_TransferType_ABANDON TransferType = 0  // 放弃
	TransferType_H2OTransfer          TransferType = 1  // 转账
	TransferType_H2OCASH              TransferType = 2  // 提现
	TransferType_H2OCHARGE            TransferType = 3  // 充值
	TransferType_H2OApproval          TransferType = 4  // h2o授权
	TransferType_H2OApprovalTransfer  TransferType = 5  // h2o授权转账
	TransferType_NftTransfer          TransferType = 6  // 转账
	TransferType_NftCreate            TransferType = 7  // nft创建
	TransferType_NftCASH              TransferType = 8  // 提现
	TransferType_NftCHARGE            TransferType = 9  // 充值
	TransferType_NftApproval          TransferType = 10 // nft授权
	TransferType_NftApprovalTransfer  TransferType = 11 // nft授权转账
	TransferType_OfflineTransfer      TransferType = 12 // 离线转账
)

// Enum value maps for TransferType.
var (
	TransferType_name = map[int32]string{
		0:  "TransferType_ABANDON",
		1:  "H2OTransfer",
		2:  "H2OCASH",
		3:  "H2OCHARGE",
		4:  "H2OApproval",
		5:  "H2OApprovalTransfer",
		6:  "NftTransfer",
		7:  "NftCreate",
		8:  "NftCASH",
		9:  "NftCHARGE",
		10: "NftApproval",
		11: "NftApprovalTransfer",
		12: "OfflineTransfer",
	}
	TransferType_value = map[string]int32{
		"TransferType_ABANDON": 0,
		"H2OTransfer":          1,
		"H2OCASH":              2,
		"H2OCHARGE":            3,
		"H2OApproval":          4,
		"H2OApprovalTransfer":  5,
		"NftTransfer":          6,
		"NftCreate":            7,
		"NftCASH":              8,
		"NftCHARGE":            9,
		"NftApproval":          10,
		"NftApprovalTransfer":  11,
		"OfflineTransfer":      12,
	}
)

func (x TransferType) Enum() *TransferType {
	p := new(TransferType)
	*p = x
	return p
}

func (x TransferType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransferType) Descriptor() protoreflect.EnumDescriptor {
	return file_wallet_msg_proto_enumTypes[0].Descriptor()
}

func (TransferType) Type() protoreflect.EnumType {
	return &file_wallet_msg_proto_enumTypes[0]
}

func (x TransferType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransferType.Descriptor instead.
func (TransferType) EnumDescriptor() ([]byte, []int) {
	return file_wallet_msg_proto_rawDescGZIP(), []int{0}
}

type BillStatus int32

const (
	BillStatus_BillStatus_ABANDON BillStatus = 0 // 放弃
	BillStatus_Queuing            BillStatus = 1 // 等待上链中
	BillStatus_Pending            BillStatus = 2 // 上链中
	BillStatus_Success            BillStatus = 3 // 成功
	BillStatus_Failed             BillStatus = 4 // 失败
)

// Enum value maps for BillStatus.
var (
	BillStatus_name = map[int32]string{
		0: "BillStatus_ABANDON",
		1: "Queuing",
		2: "Pending",
		3: "Success",
		4: "Failed",
	}
	BillStatus_value = map[string]int32{
		"BillStatus_ABANDON": 0,
		"Queuing":            1,
		"Pending":            2,
		"Success":            3,
		"Failed":             4,
	}
)

func (x BillStatus) Enum() *BillStatus {
	p := new(BillStatus)
	*p = x
	return p
}

func (x BillStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BillStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_wallet_msg_proto_enumTypes[1].Descriptor()
}

func (BillStatus) Type() protoreflect.EnumType {
	return &file_wallet_msg_proto_enumTypes[1]
}

func (x BillStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BillStatus.Descriptor instead.
func (BillStatus) EnumDescriptor() ([]byte, []int) {
	return file_wallet_msg_proto_rawDescGZIP(), []int{1}
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_msg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_msg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_wallet_msg_proto_rawDescGZIP(), []int{0}
}

type UidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`          // 用户唯一标识
	Addr     string `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`         // 用户登录地址
	Currency string `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"` // 币种
}

func (x *UidReq) Reset() {
	*x = UidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_msg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UidReq) ProtoMessage() {}

func (x *UidReq) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_msg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UidReq.ProtoReflect.Descriptor instead.
func (*UidReq) Descriptor() ([]byte, []int) {
	return file_wallet_msg_proto_rawDescGZIP(), []int{1}
}

func (x *UidReq) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UidReq) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *UidReq) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type AccountGetResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`          // 用户唯一标识
	Currency string `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"` // 币种
	//    repeated string address = 2; // 钱包地址
	Balance string `protobuf:"bytes,3,opt,name=balance,proto3" json:"balance,omitempty"`  // 用户余额
	IsExist bool   `protobuf:"varint,4,opt,name=isExist,proto3" json:"isExist,omitempty"` // 是否存在
}

func (x *AccountGetResp) Reset() {
	*x = AccountGetResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_msg_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountGetResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountGetResp) ProtoMessage() {}

func (x *AccountGetResp) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_msg_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountGetResp.ProtoReflect.Descriptor instead.
func (*AccountGetResp) Descriptor() ([]byte, []int) {
	return file_wallet_msg_proto_rawDescGZIP(), []int{2}
}

func (x *AccountGetResp) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *AccountGetResp) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *AccountGetResp) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

func (x *AccountGetResp) GetIsExist() bool {
	if x != nil {
		return x.IsExist
	}
	return false
}

type TransferForOfflineReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From         uint64       `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	To           uint64       `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`
	Currency     string       `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	Amount       string       `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	TransferType TransferType `protobuf:"varint,5,opt,name=TransferType,proto3,enum=Wallet.service.v1.TransferType" json:"TransferType,omitempty"`
}

func (x *TransferForOfflineReq) Reset() {
	*x = TransferForOfflineReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_msg_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferForOfflineReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferForOfflineReq) ProtoMessage() {}

func (x *TransferForOfflineReq) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_msg_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferForOfflineReq.ProtoReflect.Descriptor instead.
func (*TransferForOfflineReq) Descriptor() ([]byte, []int) {
	return file_wallet_msg_proto_rawDescGZIP(), []int{3}
}

func (x *TransferForOfflineReq) GetFrom() uint64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *TransferForOfflineReq) GetTo() uint64 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *TransferForOfflineReq) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *TransferForOfflineReq) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *TransferForOfflineReq) GetTransferType() TransferType {
	if x != nil {
		return x.TransferType
	}
	return TransferType_TransferType_ABANDON
}

type TransferCashReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`          // 用户唯一标识
	ToAddr   string `protobuf:"bytes,2,opt,name=toAddr,proto3" json:"toAddr,omitempty"`     // 提现地址
	Currency string `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"` //币种
	Amount   string `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`     // 提现金额
}

func (x *TransferCashReq) Reset() {
	*x = TransferCashReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_msg_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferCashReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferCashReq) ProtoMessage() {}

func (x *TransferCashReq) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_msg_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferCashReq.ProtoReflect.Descriptor instead.
func (*TransferCashReq) Descriptor() ([]byte, []int) {
	return file_wallet_msg_proto_rawDescGZIP(), []int{4}
}

func (x *TransferCashReq) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *TransferCashReq) GetToAddr() string {
	if x != nil {
		return x.ToAddr
	}
	return ""
}

func (x *TransferCashReq) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *TransferCashReq) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type AddrResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr string `protobuf:"bytes,1,opt,name=Addr,proto3" json:"Addr,omitempty"` // 系统地址
}

func (x *AddrResp) Reset() {
	*x = AddrResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_msg_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddrResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddrResp) ProtoMessage() {}

func (x *AddrResp) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_msg_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddrResp.ProtoReflect.Descriptor instead.
func (*AddrResp) Descriptor() ([]byte, []int) {
	return file_wallet_msg_proto_rawDescGZIP(), []int{5}
}

func (x *AddrResp) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type Page struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`   // 每次读取数量
	Offset int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"` // 偏移量
	Total  int64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`   // 总数
}

func (x *Page) Reset() {
	*x = Page{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_msg_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Page) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Page) ProtoMessage() {}

func (x *Page) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_msg_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Page.ProtoReflect.Descriptor instead.
func (*Page) Descriptor() ([]byte, []int) {
	return file_wallet_msg_proto_rawDescGZIP(), []int{6}
}

func (x *Page) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Page) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *Page) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type BillInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Amount         string       `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Gas            string       `protobuf:"bytes,3,opt,name=gas,proto3" json:"gas,omitempty"`
	GasCurrency    string       `protobuf:"bytes,4,opt,name=gasCurrency,proto3" json:"gasCurrency,omitempty"`
	ReceivedAmount string       `protobuf:"bytes,5,opt,name=receivedAmount,proto3" json:"receivedAmount,omitempty"`
	BillType       TransferType `protobuf:"varint,6,opt,name=billType,proto3,enum=Wallet.service.v1.TransferType" json:"billType,omitempty"`
	BillStatus     BillStatus   `protobuf:"varint,7,opt,name=billStatus,proto3,enum=Wallet.service.v1.BillStatus" json:"billStatus,omitempty"`
	Hash           string       `protobuf:"bytes,8,opt,name=hash,proto3" json:"hash,omitempty"`
	From           uint64       `protobuf:"varint,9,opt,name=from,proto3" json:"from,omitempty"`
	FromAddr       string       `protobuf:"bytes,10,opt,name=fromAddr,proto3" json:"fromAddr,omitempty"`
	To             uint64       `protobuf:"varint,11,opt,name=to,proto3" json:"to,omitempty"`
	ToAddr         string       `protobuf:"bytes,12,opt,name=toAddr,proto3" json:"toAddr,omitempty"`
	Remark         string       `protobuf:"bytes,13,opt,name=remark,proto3" json:"remark,omitempty"`
	Times          int64        `protobuf:"varint,14,opt,name=times,proto3" json:"times,omitempty"`
	NftToken       string       `protobuf:"bytes,15,opt,name=nftToken,proto3" json:"nftToken,omitempty"`
	Contract       string       `protobuf:"bytes,16,opt,name=contract,proto3" json:"contract,omitempty"`
	Currency       string       `protobuf:"bytes,17,opt,name=currency,proto3" json:"currency,omitempty"`
	CreateTime     int64        `protobuf:"varint,18,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime     int64        `protobuf:"varint,19,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	IsBalanceSet   bool         `protobuf:"varint,20,opt,name=IsBalanceSet,proto3" json:"IsBalanceSet,omitempty"`
	NftInfo        *NftInfo     `protobuf:"bytes,21,opt,name=NftInfo,proto3" json:"NftInfo,omitempty"`
}

func (x *BillInfo) Reset() {
	*x = BillInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_msg_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillInfo) ProtoMessage() {}

func (x *BillInfo) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_msg_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillInfo.ProtoReflect.Descriptor instead.
func (*BillInfo) Descriptor() ([]byte, []int) {
	return file_wallet_msg_proto_rawDescGZIP(), []int{7}
}

func (x *BillInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BillInfo) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *BillInfo) GetGas() string {
	if x != nil {
		return x.Gas
	}
	return ""
}

func (x *BillInfo) GetGasCurrency() string {
	if x != nil {
		return x.GasCurrency
	}
	return ""
}

func (x *BillInfo) GetReceivedAmount() string {
	if x != nil {
		return x.ReceivedAmount
	}
	return ""
}

func (x *BillInfo) GetBillType() TransferType {
	if x != nil {
		return x.BillType
	}
	return TransferType_TransferType_ABANDON
}

func (x *BillInfo) GetBillStatus() BillStatus {
	if x != nil {
		return x.BillStatus
	}
	return BillStatus_BillStatus_ABANDON
}

func (x *BillInfo) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *BillInfo) GetFrom() uint64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *BillInfo) GetFromAddr() string {
	if x != nil {
		return x.FromAddr
	}
	return ""
}

func (x *BillInfo) GetTo() uint64 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *BillInfo) GetToAddr() string {
	if x != nil {
		return x.ToAddr
	}
	return ""
}

func (x *BillInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *BillInfo) GetTimes() int64 {
	if x != nil {
		return x.Times
	}
	return 0
}

func (x *BillInfo) GetNftToken() string {
	if x != nil {
		return x.NftToken
	}
	return ""
}

func (x *BillInfo) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *BillInfo) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *BillInfo) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *BillInfo) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *BillInfo) GetIsBalanceSet() bool {
	if x != nil {
		return x.IsBalanceSet
	}
	return false
}

func (x *BillInfo) GetNftInfo() *NftInfo {
	if x != nil {
		return x.NftInfo
	}
	return nil
}

type NftInfoS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nfts map[string]*NftInfo `protobuf:"bytes,1,rep,name=nfts,proto3" json:"nfts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *NftInfoS) Reset() {
	*x = NftInfoS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_msg_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NftInfoS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NftInfoS) ProtoMessage() {}

func (x *NftInfoS) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_msg_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NftInfoS.ProtoReflect.Descriptor instead.
func (*NftInfoS) Descriptor() ([]byte, []int) {
	return file_wallet_msg_proto_rawDescGZIP(), []int{8}
}

func (x *NftInfoS) GetNfts() map[string]*NftInfo {
	if x != nil {
		return x.Nfts
	}
	return nil
}

type NftInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid             uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	OwnerAddress    string `protobuf:"bytes,2,opt,name=ownerAddress,proto3" json:"ownerAddress,omitempty"`
	GameId          string `protobuf:"bytes,3,opt,name=GameId,proto3" json:"GameId,omitempty"`
	NftGameToken    string `protobuf:"bytes,4,opt,name=nftGameToken,proto3" json:"nftGameToken,omitempty"`
	NftChainToken   string `protobuf:"bytes,5,opt,name=nftChainToken,proto3" json:"nftChainToken,omitempty"`
	ContractAddress string `protobuf:"bytes,6,opt,name=contractAddress,proto3" json:"contractAddress,omitempty"`
	ContractToken   string `protobuf:"bytes,7,opt,name=contractToken,proto3" json:"contractToken,omitempty"`
	Level           uint64 `protobuf:"varint,8,opt,name=Level,proto3" json:"Level,omitempty"`
	IsBalanceSet    bool   `protobuf:"varint,9,opt,name=IsBalanceSet,proto3" json:"IsBalanceSet,omitempty"`
}

func (x *NftInfo) Reset() {
	*x = NftInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_msg_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NftInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NftInfo) ProtoMessage() {}

func (x *NftInfo) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_msg_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NftInfo.ProtoReflect.Descriptor instead.
func (*NftInfo) Descriptor() ([]byte, []int) {
	return file_wallet_msg_proto_rawDescGZIP(), []int{9}
}

func (x *NftInfo) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *NftInfo) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

func (x *NftInfo) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *NftInfo) GetNftGameToken() string {
	if x != nil {
		return x.NftGameToken
	}
	return ""
}

func (x *NftInfo) GetNftChainToken() string {
	if x != nil {
		return x.NftChainToken
	}
	return ""
}

func (x *NftInfo) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *NftInfo) GetContractToken() string {
	if x != nil {
		return x.ContractToken
	}
	return ""
}

func (x *NftInfo) GetLevel() uint64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *NftInfo) GetIsBalanceSet() bool {
	if x != nil {
		return x.IsBalanceSet
	}
	return false
}

type NftToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractToken string `protobuf:"bytes,1,opt,name=contractToken,proto3" json:"contractToken,omitempty"`
	NftToken      string `protobuf:"bytes,2,opt,name=nftToken,proto3" json:"nftToken,omitempty"`
}

func (x *NftToken) Reset() {
	*x = NftToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_msg_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NftToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NftToken) ProtoMessage() {}

func (x *NftToken) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_msg_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NftToken.ProtoReflect.Descriptor instead.
func (*NftToken) Descriptor() ([]byte, []int) {
	return file_wallet_msg_proto_rawDescGZIP(), []int{10}
}

func (x *NftToken) GetContractToken() string {
	if x != nil {
		return x.ContractToken
	}
	return ""
}

func (x *NftToken) GetNftToken() string {
	if x != nil {
		return x.NftToken
	}
	return ""
}

type Hash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *Hash) Reset() {
	*x = Hash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_msg_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hash) ProtoMessage() {}

func (x *Hash) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_msg_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hash.ProtoReflect.Descriptor instead.
func (*Hash) Descriptor() ([]byte, []int) {
	return file_wallet_msg_proto_rawDescGZIP(), []int{11}
}

func (x *Hash) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type NftGetByUidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid  uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Addr string `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Page *Page  `protobuf:"bytes,3,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *NftGetByUidReq) Reset() {
	*x = NftGetByUidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_msg_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NftGetByUidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NftGetByUidReq) ProtoMessage() {}

func (x *NftGetByUidReq) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_msg_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NftGetByUidReq.ProtoReflect.Descriptor instead.
func (*NftGetByUidReq) Descriptor() ([]byte, []int) {
	return file_wallet_msg_proto_rawDescGZIP(), []int{12}
}

func (x *NftGetByUidReq) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *NftGetByUidReq) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *NftGetByUidReq) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

type ContractType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractType string `protobuf:"bytes,1,opt,name=contractType,proto3" json:"contractType,omitempty"` // 合约类型
}

func (x *ContractType) Reset() {
	*x = ContractType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_msg_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractType) ProtoMessage() {}

func (x *ContractType) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_msg_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractType.ProtoReflect.Descriptor instead.
func (*ContractType) Descriptor() ([]byte, []int) {
	return file_wallet_msg_proto_rawDescGZIP(), []int{13}
}

func (x *ContractType) GetContractType() string {
	if x != nil {
		return x.ContractType
	}
	return ""
}

type NftCashReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid          uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`                  // 用户唯一标识
	ToAddr       string `protobuf:"bytes,2,opt,name=toAddr,proto3" json:"toAddr,omitempty"`             // 提现地址
	NftToken     string `protobuf:"bytes,3,opt,name=nftToken,proto3" json:"nftToken,omitempty"`         // Nft token
	ContractType string `protobuf:"bytes,4,opt,name=contractType,proto3" json:"contractType,omitempty"` // 合约类型
}

func (x *NftCashReq) Reset() {
	*x = NftCashReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_msg_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NftCashReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NftCashReq) ProtoMessage() {}

func (x *NftCashReq) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_msg_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NftCashReq.ProtoReflect.Descriptor instead.
func (*NftCashReq) Descriptor() ([]byte, []int) {
	return file_wallet_msg_proto_rawDescGZIP(), []int{14}
}

func (x *NftCashReq) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *NftCashReq) GetToAddr() string {
	if x != nil {
		return x.ToAddr
	}
	return ""
}

func (x *NftCashReq) GetNftToken() string {
	if x != nil {
		return x.NftToken
	}
	return ""
}

func (x *NftCashReq) GetContractType() string {
	if x != nil {
		return x.ContractType
	}
	return ""
}

var File_wallet_msg_proto protoreflect.FileDescriptor

var file_wallet_msg_proto_rawDesc = []byte{
	0x0a, 0x10, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x11, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x4a,
	0x0a, 0x06, 0x55, 0x69, 0x64, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64,
	0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x72, 0x0a, 0x0e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x22, 0xb4,
	0x01, 0x0a, 0x15, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x4f, 0x66,
	0x66, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02,
	0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x43, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x6f, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x43, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f,
	0x41, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x41, 0x64,
	0x64, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x1e, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x41, 0x64, 0x64, 0x72, 0x22, 0x4a, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0x92, 0x05, 0x0a, 0x08, 0x42, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x61, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x67, 0x61, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x61, 0x73,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x67, 0x61, 0x73, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x08, 0x62, 0x69, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x62, 0x69, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x3d, 0x0a, 0x0a, 0x62, 0x69, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x0a, 0x62, 0x69, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68,
	0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x41,
	0x64, 0x64, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x41,
	0x64, 0x64, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x66, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x66, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x49, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x74, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x49, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x65,
	0x74, 0x12, 0x34, 0x0a, 0x07, 0x4e, 0x66, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x66, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07,
	0x4e, 0x66, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x9a, 0x01, 0x0a, 0x08, 0x4e, 0x66, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x53, 0x12, 0x39, 0x0a, 0x04, 0x6e, 0x66, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x66, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x2e,
	0x4e, 0x66, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x6e, 0x66, 0x74, 0x73, 0x1a,
	0x53, 0x0a, 0x09, 0x4e, 0x66, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x66, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xab, 0x02, 0x0a, 0x07, 0x4e, 0x66, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x6e, 0x66, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x66, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x66, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x66, 0x74, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x22,
	0x0a, 0x0c, 0x49, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x49, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x53,
	0x65, 0x74, 0x22, 0x4c, 0x0a, 0x08, 0x4e, 0x66, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x24,
	0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x66, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x66, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x1a, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x63, 0x0a, 0x0e,
	0x4e, 0x66, 0x74, 0x47, 0x65, 0x74, 0x42, 0x79, 0x55, 0x69, 0x64, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x61, 0x64, 0x64, 0x72, 0x12, 0x2b, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x22, 0x32, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x76, 0x0a, 0x0a, 0x4e, 0x66, 0x74, 0x43, 0x61, 0x73, 0x68,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x6e, 0x66, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6e, 0x66, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2a, 0xfa, 0x01,
	0x0a, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x14, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x41,
	0x42, 0x41, 0x4e, 0x44, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x48, 0x32, 0x4f, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x48, 0x32, 0x4f,
	0x43, 0x41, 0x53, 0x48, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x48, 0x32, 0x4f, 0x43, 0x48, 0x41,
	0x52, 0x47, 0x45, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x48, 0x32, 0x4f, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x61, 0x6c, 0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x48, 0x32, 0x4f, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x10, 0x05, 0x12,
	0x0f, 0x0a, 0x0b, 0x4e, 0x66, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x10, 0x06,
	0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x66, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x10, 0x07, 0x12,
	0x0b, 0x0a, 0x07, 0x4e, 0x66, 0x74, 0x43, 0x41, 0x53, 0x48, 0x10, 0x08, 0x12, 0x0d, 0x0a, 0x09,
	0x4e, 0x66, 0x74, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x10, 0x09, 0x12, 0x0f, 0x0a, 0x0b, 0x4e,
	0x66, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x10, 0x0a, 0x12, 0x17, 0x0a, 0x13,
	0x4e, 0x66, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x10, 0x0b, 0x12, 0x13, 0x0a, 0x0f, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x10, 0x0c, 0x2a, 0x57, 0x0a, 0x0a, 0x42, 0x69,
	0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x42, 0x69, 0x6c, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x41, 0x42, 0x41, 0x4e, 0x44, 0x4f, 0x4e, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x51, 0x75, 0x65, 0x75, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x0b, 0x0a,
	0x07, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x10, 0x04, 0x42, 0x2a, 0x5a, 0x28, 0x74, 0x70, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x74, 0x70, 0x5f, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x2f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2f, 0x64, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_wallet_msg_proto_rawDescOnce sync.Once
	file_wallet_msg_proto_rawDescData = file_wallet_msg_proto_rawDesc
)

func file_wallet_msg_proto_rawDescGZIP() []byte {
	file_wallet_msg_proto_rawDescOnce.Do(func() {
		file_wallet_msg_proto_rawDescData = protoimpl.X.CompressGZIP(file_wallet_msg_proto_rawDescData)
	})
	return file_wallet_msg_proto_rawDescData
}

var file_wallet_msg_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_wallet_msg_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_wallet_msg_proto_goTypes = []interface{}{
	(TransferType)(0),             // 0: Wallet.service.v1.TransferType
	(BillStatus)(0),               // 1: Wallet.service.v1.BillStatus
	(*Empty)(nil),                 // 2: Wallet.service.v1.Empty
	(*UidReq)(nil),                // 3: Wallet.service.v1.UidReq
	(*AccountGetResp)(nil),        // 4: Wallet.service.v1.AccountGetResp
	(*TransferForOfflineReq)(nil), // 5: Wallet.service.v1.TransferForOfflineReq
	(*TransferCashReq)(nil),       // 6: Wallet.service.v1.TransferCashReq
	(*AddrResp)(nil),              // 7: Wallet.service.v1.AddrResp
	(*Page)(nil),                  // 8: Wallet.service.v1.Page
	(*BillInfo)(nil),              // 9: Wallet.service.v1.BillInfo
	(*NftInfoS)(nil),              // 10: Wallet.service.v1.NftInfoS
	(*NftInfo)(nil),               // 11: Wallet.service.v1.NftInfo
	(*NftToken)(nil),              // 12: Wallet.service.v1.NftToken
	(*Hash)(nil),                  // 13: Wallet.service.v1.Hash
	(*NftGetByUidReq)(nil),        // 14: Wallet.service.v1.NftGetByUidReq
	(*ContractType)(nil),          // 15: Wallet.service.v1.ContractType
	(*NftCashReq)(nil),            // 16: Wallet.service.v1.NftCashReq
	nil,                           // 17: Wallet.service.v1.NftInfoS.NftsEntry
}
var file_wallet_msg_proto_depIdxs = []int32{
	0,  // 0: Wallet.service.v1.TransferForOfflineReq.TransferType:type_name -> Wallet.service.v1.TransferType
	0,  // 1: Wallet.service.v1.BillInfo.billType:type_name -> Wallet.service.v1.TransferType
	1,  // 2: Wallet.service.v1.BillInfo.billStatus:type_name -> Wallet.service.v1.BillStatus
	11, // 3: Wallet.service.v1.BillInfo.NftInfo:type_name -> Wallet.service.v1.NftInfo
	17, // 4: Wallet.service.v1.NftInfoS.nfts:type_name -> Wallet.service.v1.NftInfoS.NftsEntry
	8,  // 5: Wallet.service.v1.NftGetByUidReq.page:type_name -> Wallet.service.v1.Page
	11, // 6: Wallet.service.v1.NftInfoS.NftsEntry.value:type_name -> Wallet.service.v1.NftInfo
	7,  // [7:7] is the sub-list for method output_type
	7,  // [7:7] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_wallet_msg_proto_init() }
func file_wallet_msg_proto_init() {
	if File_wallet_msg_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_wallet_msg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_msg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_msg_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountGetResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_msg_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferForOfflineReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_msg_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferCashReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_msg_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddrResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_msg_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Page); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_msg_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_msg_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NftInfoS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_msg_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NftInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_msg_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NftToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_msg_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Hash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_msg_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NftGetByUidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_msg_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_msg_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NftCashReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wallet_msg_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wallet_msg_proto_goTypes,
		DependencyIndexes: file_wallet_msg_proto_depIdxs,
		EnumInfos:         file_wallet_msg_proto_enumTypes,
		MessageInfos:      file_wallet_msg_proto_msgTypes,
	}.Build()
	File_wallet_msg_proto = out.File
	file_wallet_msg_proto_rawDesc = nil
	file_wallet_msg_proto_goTypes = nil
	file_wallet_msg_proto_depIdxs = nil
}
