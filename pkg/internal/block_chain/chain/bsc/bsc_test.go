package bsc

import (
	"math/big"
	"testing"
)

func TestGetBlockInfo(t *testing.T) {
	res, err := GetBlockInfo(11274615, TestKey)
	if err != nil {
		t.Error(err)
		return
	}
	t.Log(res.Result.Transactions[0].Nonce)
}

func TestGetGasTracker(t *testing.T) {
	res, err := GetGasTracker(TestKey)
	if err != nil {
		t.Error(err)
		return
	}
	t.Log(res)
}

func TestGetTransactionReceipt(t *testing.T) {
	//0x5dc653bbd5486b32cce80f8515b6f039e2774e36e1666d13ee537340fb8e3808
	res, err := GetTransactionReceipt("0x5dc653bbd5486b32cce80f8515b6f039e2774e36e1666d13ee537340fb8e3808", TestKey)
	if err != nil {
		t.Error(err)
		return
	}
	t.Log(res.Result.BlockNumber)
}

func TestGetGasPrice(t *testing.T) {
	res, err := GetGasPrice(TestKey)
	if err != nil {
		t.Error(err)
		return
	}
	t.Log(new(big.Int).Div(new(big.Int).SetUint64(res), big.NewInt(1e+9)).Uint64())
}

func TestGetAccountNonce(t *testing.T) {
	res, err := GetAccountNonce("0xd75596573b4e691e2ee7cb3b5618b8ab8618c7d5", TestKey)
	if err != nil {
		t.Error(err)
		return
	}
	t.Log(res)
}

func TestSendRawTransaction(t *testing.T) {
	raw := "0xf911e98085012a05f200830f42408001b9119560806040523480156200001157600080fd5b506040518060400160405280600b81526020017f463148324f20746f6b656e0000000000000000000000000000000000000000008152506040518060400160405280600581526020017f463148324f000000000000000000000000000000000000000000000000000000815250601282600390805190602001906200009892919062000232565b508160049080519060200190620000b192919062000232565b5080600560006101000a81548160ff021916908360ff160217905550505050620000f36012600a0a640ba43b7400620001ad60201b62000cf71790919060201c565b600081905550600054600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6000546040518082815260200191505060405180910390a3620002e1565b600080831415620001c257600090506200022c565b818302905081838281620001d257fe5b04146200022b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180620011746021913960400191505060405180910390fd5b5b92915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200027557805160ff1916838001178555620002a6565b82800160010185558215620002a6579182015b82811115620002a557825182559160200191906001019062000288565b5b509050620002b59190620002b9565b5090565b620002de91905b80821115620002da576000816000905550600101620002c0565b5090565b90565b610e8380620002f16000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461022557806370a082311461024957806395d89b41146102a1578063a9059cbb14610324578063dd62ed3e1461038a57610093565b806306fdde0314610098578063095ea7b31461011b57806318160ddd1461018157806323b872dd1461019f575b600080fd5b6100a0610402565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100e05780820151818401526020810190506100c5565b50505050905090810190601f16801561010d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101676004803603604081101561013157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506104a0565b604051808215151515815260200191505060405180910390f35b6101896104b7565b6040518082815260200191505060405180910390f35b61020b600480360360608110156101b557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506104bd565b604051808215151515815260200191505060405180910390f35b61022d61056e565b604051808260ff1660ff16815260200191505060405180910390f35b61028b6004803603602081101561025f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610581565b6040518082815260200191505060405180910390f35b6102a9610599565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102e95780820151818401526020810190506102ce565b50505050905090810190601f1680156103165780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103706004803603604081101561033a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610637565b604051808215151515815260200191505060405180910390f35b6103ec600480360360408110156103a057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061064e565b6040518082815260200191505060405180910390f35b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104985780601f1061046d57610100808354040283529160200191610498565b820191906000526020600020905b81548152906001019060200180831161047b57829003601f168201915b505050505081565b60006104ad3384846106d5565b6001905092915050565b60005481565b60006104ca8484846108cc565b610563843361055e85600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bf190919063ffffffff16565b6106d5565b600190509392505050565b600560009054906101000a900460ff1681565b60016020528060005260406000206000915090505481565b60048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561062f5780601f106106045761010080835404028352916020019161062f565b820191906000526020600020905b81548152906001019060200180831161061257829003601f168201915b505050505081565b60006106443384846108cc565b6001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561075b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610e2b6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107e1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610d9b6022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610952576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180610e066025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109d8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610d786023913960400191505060405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180610dbd6028913960400191505060405180910390fd5b610aaf81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bf190919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610b4481600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c7490919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600082821115610c69576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b818303905092915050565b6000818301905082811015610cf1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b92915050565b600080831415610d0a5760009050610d71565b818302905081838281610d1957fe5b0414610d70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180610de56021913960400191505060405180910390fd5b5b9291505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220746f207468697320636f6e74726163742061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a265627a7a723158208e1557b70225fdffaf107d82fe115e5a26b1f242ba44a9439734e045ed17d4dc64736f6c63430005110032536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7781e6a0226b7885250b365f06756c3e57b63f28e890771103598d5b82e9fe7bb55dad45a05130a2dfca3cb06fab7e7c03d338e0a7c32dea166d1b3ab504588fcb6875c2fe"
	res, err := SendRawTransaction(raw, TestKey)
	if err != nil {
		t.Error(err)
		return
	}
	t.Log(res)
}
